{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\n\nvar ProgressCircular = /*#__PURE__*/function (_Component) {\n  _inherits(ProgressCircular, _Component);\n\n  var _super = _createSuper(ProgressCircular);\n\n  function ProgressCircular() {\n    var _this;\n\n    _classCallCheck(this, ProgressCircular);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"radius\", 20);\n\n    _defineProperty(_assertThisInitialized(_this), \"circumference\", 2 * Math.PI * _this.radius);\n\n    _defineProperty(_assertThisInitialized(_this), \"strokeDashArray\", Math.round(_this.circumference * 1000) / 1000);\n\n    return _this;\n  }\n\n  _createClass(ProgressCircular, [{\n    key: \"normalizeValue\",\n    value: function normalizeValue(value) {\n      return Math.max(0, Math.min(value, 100));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var normalizedValue = this.normalizeValue(this.props.value);\n      var viewBoxSize = this.radius / (1 - this.props.width / this.props.size);\n      var strokeDashOffset = \"\".concat((100 - normalizedValue) / 100 * this.circumference, \"px\");\n      var strokeWidth = this.props.width / this.props.size * viewBoxSize * 2;\n      return __jsx(\"div\", {\n        role: \"progressbar\",\n        \"aria-valuemin\": \"0\",\n        \"aria-valuemax\": \"100\",\n        \"aria-valuenow\": normalizedValue,\n        style: {\n          transform: \"rotate(\".concat(this.props.rotate || 0, \"deg)\")\n        }\n      }, __jsx(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        viewBox: \"\".concat(viewBoxSize, \" \").concat(viewBoxSize, \" \").concat(2 * viewBoxSize, \" \").concat(2 * viewBoxSize)\n      }, __jsx(\"linearGradient\", {\n        id: \"a\",\n        gradientUnits: \"userSpaceOnUse\",\n        x1: viewBoxSize,\n        y1: viewBoxSize * 1.5,\n        x2: viewBoxSize * 2,\n        y2: viewBoxSize * 1.5\n      }, __jsx(\"stop\", {\n        offset: \"0\",\n        stopColor: \"#fff\",\n        stopOpacity: \"0\"\n      }), __jsx(\"stop\", {\n        offset: \"1\",\n        stopColor: \"#fff\",\n        stopOpacity: \".2\"\n      })), __jsx(\"circle\", {\n        fill: \"transparent\",\n        cx: 2 * viewBoxSize,\n        cy: 2 * viewBoxSize,\n        r: this.radius,\n        stroke: \"url(#a)\",\n        strokeWidth: strokeWidth,\n        strokeDasharray: this.strokeDashArray,\n        strokeDashoffset: strokeDashOffset\n      })));\n    }\n  }]);\n\n  return ProgressCircular;\n}(Component);\n\n_defineProperty(ProgressCircular, \"defaultProps\", {\n  rotate: 0,\n  size: 32,\n  value: 0,\n  width: 4\n});\n\nexport default ProgressCircular;","map":null,"metadata":{},"sourceType":"module"}