{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\n\nclass ProgressCircular extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"radius\", 20);\n\n    _defineProperty(this, \"circumference\", 2 * Math.PI * this.radius);\n\n    _defineProperty(this, \"strokeDashArray\", Math.round(this.circumference * 1000) / 1000);\n  }\n\n  normalizeValue(value) {\n    return Math.max(0, Math.min(value, 100));\n  }\n\n  render() {\n    const normalizedValue = this.normalizeValue(this.props.value);\n    const viewBoxSize = this.radius / (1 - this.props.width / this.props.size);\n    const strokeDashOffset = `${(100 - normalizedValue) / 100 * this.circumference}px`;\n    const strokeWidth = this.props.width / this.props.size * viewBoxSize * 2;\n    return __jsx(\"div\", {\n      role: \"progressbar\",\n      \"aria-valuemin\": \"0\",\n      \"aria-valuemax\": \"100\",\n      \"aria-valuenow\": normalizedValue,\n      style: {\n        transform: `rotate(${this.props.rotate || 0}deg)`\n      }\n    }, __jsx(\"svg\", {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      viewBox: `${viewBoxSize} ${viewBoxSize} ${2 * viewBoxSize} ${2 * viewBoxSize}`\n    }, __jsx(\"linearGradient\", {\n      id: \"a\",\n      gradientUnits: \"userSpaceOnUse\",\n      x1: viewBoxSize,\n      y1: viewBoxSize * 1.5,\n      x2: viewBoxSize * 2,\n      y2: viewBoxSize * 1.5\n    }, __jsx(\"stop\", {\n      offset: \"0\",\n      stopColor: \"#fff\",\n      stopOpacity: \"0\"\n    }), __jsx(\"stop\", {\n      offset: \"1\",\n      stopColor: \"#fff\",\n      stopOpacity: \".2\"\n    })), __jsx(\"circle\", {\n      fill: \"transparent\",\n      cx: 2 * viewBoxSize,\n      cy: 2 * viewBoxSize,\n      r: this.radius,\n      stroke: \"url(#a)\",\n      strokeWidth: strokeWidth,\n      strokeDasharray: this.strokeDashArray,\n      strokeDashoffset: strokeDashOffset\n    })));\n  }\n\n}\n\n_defineProperty(ProgressCircular, \"defaultProps\", {\n  rotate: 0,\n  size: 32,\n  value: 0,\n  width: 4\n});\n\nexport default ProgressCircular;","map":null,"metadata":{},"sourceType":"module"}