{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport Layout from \"../../layouts/Layout\";\nimport Blog from \"../../components/Blog\";\nimport Meta from \"../../components/Meta\";\nimport { research } from \"../../lib/blogs\";\n\nconst Page = props => __jsx(Layout, null, __jsx(Meta, {\n  title: \"Research Portal\",\n  description: \"Read our research articles, stories, biohacking, reverse engineering, how-to videos, and more!\"\n}), __jsx(Blog, {\n  allTags: props.allTags,\n  heroTitle: \"801 Labs Research Portal\",\n  pagination: props.pagination,\n  paginationPath: \"/research-portal\",\n  path: \"/research-portal\",\n  posts: props.posts,\n  title: \"Research, How-To's, Stories, & More\"\n}));\n\nexport async function getStaticProps({\n  params\n}) {\n  if (!params) return;\n  const allTags = research.getTags();\n  const data = research.getPosts(+params.page, research.postsPerPage);\n  return {\n    props: _objectSpread({\n      allTags\n    }, data)\n  };\n}\nexport async function getStaticPaths() {\n  const {\n    pagination\n  } = research.getPosts(1, research.postsPerPage);\n  const paths = [];\n\n  for (let i = 1; i <= pagination.totalPages; i++) {\n    paths.push({\n      params: {\n        page: `${i}`\n      }\n    });\n  }\n\n  return {\n    paths,\n    fallback: false\n  };\n}\nexport default Page;","map":null,"metadata":{},"sourceType":"module"}